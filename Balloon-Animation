<!doctype html>
<html lang='en'>
<head>
	<title>Balloon Fun</title>
<style>
canvas {
	border: 0px solid black;
}	
</style>
<script>
/*TO DO
Add background music
Add mouse click interaction
Add animation to balloons
Add animation to pump
Add animation to text--title screen with button to start?
Fix responsive canvas issue?
Make better color gradients for balloons
*/

var canvas;
var context;
var textTimer;
var timer;
var title;

function degreesToRadians(degrees) {
    return (degrees * Math.PI)/180;
}



function artHandler() {
    drawBackground(canvas, context);
    drawGround(canvas, context);
    drawPump(canvas, context);
    drawCord(canvas, context);
    drawText(canvas, context);
    //Balloon(canvas, context);
    //timer = setInterval(growBalloon(canvas, context), 100);
    setTimeout(function() {
        var startTime = (new Date()).getTime();
        animate(balloon, canvas, context, startTime);
      }, 1000);
    
    window.requestAnimFrame = (function(callback) {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||
        function(callback) {
          window.setTimeout(callback, 1000 / 60);
        };
      })();

    function drawBackground(canvas, context) {
        var bgColor = '#dfbf9f';
        //sets fill style
        context.fillStyle = bgColor;
        context.fillRect(0,0,canvas.width,canvas.height);
    }

    /*making a responsive canvas
    function resizeCanvas() {
        //set new sizes                 
        var newCanvasWidth = Math.max((canvas.parentNode.clientWidth), 800);
        //this part needs work
        var newCanvasHeight = Math.max((canvas.parentNode.clientHeight), 800);

        //only redraw if the size  has changed
        if ((newCanvasWidth != canvas.width) || (newCanvasHeight != canvas.height)) {
            canvas.width = newCanvasWidth;
            canvas.height = newCanvasHeight;
        }
    }
    //resizes once window stops moving
    var resizeTracker;
    window.addEventListener('resize', (function(){
    	clearTimeout(resizeTracker);
    	resizeTracker = setTimeout(resizeCanvas, 100);
    }), false);
    */

    //drawing the balloon pump
    function drawPump(canvas, context) {
        var pumpFill = context.createLinearGradient(400,400,380,300);
        pumpFill.addColorStop(1, "#cccccc");
        pumpFill.addColorStop(0, "#666666");
        context.globalCompositeOperation='source-over';
        context.beginPath();
        context.moveTo(400, 430);
        context.lineTo(400, 300);
        context.lineTo(380, 300);
        context.lineTo(380, 430);
        context.quadraticCurveTo(390, 436, 400, 430);
        //context.scale(1, -1);
        context.strokeStyle="4d4d4d";
        context.fillStyle=pumpFill;
        context.stroke();
        context.fill();
        //drawing the handle
        context.beginPath();
        context.moveTo(400, 295);
        context.lineTo(430, 295);
        context.lineTo(430, 285);
        context.lineTo(350, 285);
        context.lineTo(350, 295);
        context.lineTo(400, 295);
        context.strokeStyle="4d4d4d";
        context.fillStyle=pumpFill;
        context.stroke();
        context.fill();
        //drawing the inner part of base
        context.beginPath();
        context.moveTo(395, 295);
        context.lineTo(395, 300);
        context.lineTo(385, 300);
        context.lineTo(385, 295);
        context.lineTo(395, 295);
        context.fillStyle="#4d4d4d";
        context.fill();
    }

    function drawCord(canvas, context){
        context.globalCompositeOperation='source-over';
        context.beginPath();
        context.moveTo(380, 430);
        context.bezierCurveTo(240, 380, 108, 470, 100, 430);
        context.lineWidth=5;
        context.strokeStyle= 'black';
        context.stroke();
    }


    var balloon = new Balloon(canvas, context);

    function Balloon(canvas, context){
        //change these colors if extra time
        var colors = ['red','blue','green','yellow','orange'];
        this.color = colors[Math.floor(Math.random()*colors.length)];
        context.globalCompositeOperation='source-over';
        context.beginPath();
        context.moveTo(100, 422);
        context.bezierCurveTo(0, 300, 200, 300, 100, 422);
        //drawing the tie of the balloon
        context.moveTo(100, 422);
        context.lineTo(104, 430);
        context.lineTo(96, 430);
        context.lineTo(100, 422);
        context.fillStyle=this.color;
        context.fill();
        //drawing the highlight
        context.beginPath();
        context.globalCompositeOperation='lighter';
        context.fillStyle='white';
        context.moveTo(110, 350);
        context.lineTo(110, 358);

        context.lineTo(114, 354);
        context.lineTo(114, 350);
        context.lineTo(110, 350);
        context.fill();

    }
    /*
    //animating the balloon
    function growBalloon(canvas, context){
        context.fillRect(0, 0, canvas.width, canvas.height);
        context.globalCompositeOperation = 'lighter';
        drawBackground(canvas, context);
        drawGround(canvas, context);
        drawPump(canvas, context);
        drawCord(canvas, context);
        drawText(canvas, context);
        drawBalloon(canvas, context);
        this.sx = 1.1;
        this.sy = 1.1;
        for (var i=0; i<30; i++){
        
            //var b = this.Balloon;
            this.size = (this.size * sx);
            //context.fillStyle = 'rgba(0, 0, 0, 0.3)';
            drawBalloon(canvas, context); 
        }
    }
        */
        
    


    function animate(balloon, canvas, context, startTime) {
        //update
        var time = (new Date()).getTime() - startTime;
        var linearSpeed = 100;
        //pixels/second
        var newX = linearSpeed * time / 1000;
        if(newX < canvas.width - balloon.width - balloon.borderWidth / 2) {
          balloon.x = newX;
        }
        //clear
        context.clearRect(0, 0, canvas.width, canvas.height);
        drawBackground(canvas, context);
        drawGround(canvas, context);
        drawPump(canvas, context);
        drawCord(canvas, context);
        drawText(canvas, context);
        Balloon(canvas, context);
        //request new frame
        requestAnimFrame(function() {
          animate(balloon, canvas, context, startTime);
        });
      }



    function drawGround(canvas, context){
        context.globalCompositeOperation='source-over';
        context.beginPath();
        context.moveTo(500, 450);
        context.lineTo(450, 400);
        context.lineTo(50, 400);
        context.lineTo(0, 450);
        context.lineTo(500, 450);
        context.fillStyle="#00664c";
        context.fill();
        //lines for walls
        context.fillStyle='#d2a679';
        context.beginPath();
        context.moveTo(450, 400);
        context.lineTo(450, 0);
        context.lineTo(500, 0);
        context.lineTo(500, 450);
        context.lineTo(450, 400);
        context.fill();
        //second wall
        context.beginPath();
        context.moveTo(50, 400);
        context.lineTo(50, 0);
        context.lineTo(0, 0);
        context.lineTo(0, 450);
        context.lineTo(50, 400);
        context.fill();
    }

    //FIX THIS
    function drawText(canvas, context){
        context.globalCompositeOperation = 'source-over';
            //for (var i=0; i<50; i++){
            context.beginPath();
            context.font = '24pt Helvetica Neue';
            context.fillStyle = 'black';
            context.textAlign = 'center';
            context.fillText('Balloon Fun!', canvas.width/2, canvas.height/6);
            //}
    }
}

window.onload = function() {
  canvas = document.getElementById('canvas');
  context = canvas.getContext('2d');
  artHandler();
  //textTimer = setInterval(textAnim, 100);
}

</script>
</head>
<body>
	<canvas id='canvas' width='500' height='450'></canvas>
    <audio>
        <source src='.mp3' type='/mpeg'>
</body>
</html>